
// 1. Написать программу, вычисляющую выражение a* (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы.
// Используйте static_cast или СStyle cast к float чтобы выполнить точное деление.
// 2. Дано целое число. Если оно меньше или равно 21, то выведите на экран разницу между этим числом и числом 21. Если же заданное число больше, 
// чем 21, необходимо вывести удвоенную разницу между этим числом и 21. При выполнении задания следует использовать тернарный оператор(? : ).
// 3.* Описать трёхмерный целочисленный массив, размером 3х3х3 и указатель на значения внутри массива и при помощи операции разыменования вывести
// на экран значение центральной ячейки получившегося куба[1][1][1].
// 4.* *Написать программу, вычисляющую выражение из первого задания, а переменные для неё объявлены и инициализировать в другом cpp файле.Используйте extern.

#include <iostream>
#include <cstdlib>

extern int a_ex;
extern int b_ex;
extern int c_ex;
extern int d_ex;

int main()
{
    // 1. Написать программу, вычисляющую выражение a* (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы.
    const int a = 5;
    const int b = 6;
    const int c = 10;
    const int d = 80;

    float result_1 = a * (b + static_cast<float>(c) / d);

    std::cout << "Task 1 result: " << result_1 << std::endl;

    // 2. Дано целое число. Если оно меньше или равно 21, то выведите на экран разницу между этим числом и числом 21. Если же заданное число больше,
    // чем 21, необходимо вывести удвоенную разницу между этим числом и 21. При выполнении задания следует использовать тернарный оператор(? : ).
    int number = 30;
    int result_2 = number <= 21 ? number - 21 : 2 * (number - 21);

    std::cout << "Task 2 result: " << result_2 << std::endl;

    // 3.* Описать трёхмерный целочисленный массив, размером 3х3х3 и указатель на значения внутри массива и при помощи операции разыменования вывести
    // на экран значение центральной ячейки получившегося куба[1][1][1].
    const int arr_size = 3;
    const int arr_center_index = 1;
    int arr[arr_size][arr_size][arr_size];

    srand(time(0));
    for (int i = 0; i < arr_size; i++)
    {
        for (int j = 0; j < arr_size; j++)
        {
            for (int k = 0; k < arr_size; k++)
            {
                arr[i][j][k] = rand();

                if (i == arr_center_index && j == arr_center_index && k == arr_center_index)
                    std::cout << "Center value: " << arr[i][j][k] << std::endl;
            }
        }
    }

    int* arr_p = &arr[arr_center_index][arr_center_index][arr_center_index];

    std::cout << "Get center value from pointer: " << *arr_p << std::endl;

    // 4.* *Написать программу, вычисляющую выражение из первого задания, а переменные для неё объявлены и инициализировать в другом cpp файле.Используйте extern.

    float result_4 = a_ex * (b_ex + static_cast<float>(c_ex) / d_ex);
    std::cout << "Task 4 result: " << result_4 << std::endl;

    return 0;
}
